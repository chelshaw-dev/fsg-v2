/* ---------------- COLORS ---------------- */
$gray: #4c4c4c;
$lt-gray: #f2f2f2;
$purple: #3a1772; //#4c52a3;
$bright-purple: #7348f8;
$turq: #4dffe0;
$aqua: #4dffe0;
$yellow: #ffe904;
$pink: #ff39e7;
$navy: #0f1e3d;

/* ---------------- FONT FAMILIES ---------------- */
$baloo: 'Dosis', sans-serif; //'Baloo Thambi', 'Helvetica Bold', sans-serif;
$special-font: 'Dosis', sans-serif;
$font-stack: 'Roboto', 'Helvetica Bold', sans-serif;
$regular-font: 'Roboto', 'Helvetica Bold', sans-serif;

/* ---------------- MIXINS ---------------- */
@mixin bp($point) {
  $bp-xs: "(max-width: 767px)";//$bp-xs: "(max-width: 767px)";
  $bp-sm: "(min-width: 768px)";//$bp-sm: "(min-width: 768px)";
  $bp-md: "(min-width: 992px)";
  $bp-lg: "(min-width: 1200px)";//$bp-md: "(min-width: 1110px)"; //992
  $bp-xl: "(min-width: 1480px)";
  //$bp-xl: "(min-width: 1600px)";

  @if $point == xs {
    @media #{$bp-xs} { @content; }
  }
  @else if $point == sm {
    @media #{$bp-sm} { @content; }
  }
  @else if $point == md {
    @media #{$bp-md}  { @content; }
  }
  @else if $point == lg {
    @media #{$bp-lg}  { @content; }
  }
  @else if $point == xl {
    @media #{$bp-xl}  { @content; }
  }
}
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}
@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}
@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}
/* HOW TO USE ANIMATION MIXIN
@include keyframes(slide-down) {
  0% { opacity: 1; }
  90% { opacity: 0; }
}
.element {
  width: 100px;
  height: 100px;
  background: black;
  @include animation('slide-down 5s 3');
}
*/
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
  /* USE: @include transition(color .3s ease); */
}
@mixin transform($args...){
  -webkit-transform: $args;
  -moz-transform: $args;
  transform: $args;
}
@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}
@include keyframes(bounce-up) {
  0% { top:0px; }
  30% { top:-5px; }
  60% { top:0px; }
  80% { top:-3px; }
  100% { top:0px; }
}
@include keyframes(bounce-up-big) {
  0% { top:0px; }
  30% { top:-10px; }
  60% { top:0px; }
  80% { top:-8px; }
  100% { top:0px; }
}

@keyframes hourglass{
    0%{
        transform:rotate(0deg);
        box-shadow:
            inset $lt-gray 0 0 0 0,
            inset $bright-purple 0 2em 0 0,
            inset $lt-gray 0 4em 0 0,
            inset $bright-purple 0 4em 0 0;
    }
    80%{
        transform:rotate(0deg);
        box-shadow:
            inset $lt-gray 0 2em 0 0,
            inset $bright-purple 0 2em 0 0,
            inset $lt-gray 0 2em 0 0,
            inset $bright-purple 0 4em 0 0;
    }
    100%{
        transform:rotate(180deg);
        box-shadow:
            inset $lt-gray 0 2em 0 0,
            inset $bright-purple 0 2em 0 0,
            inset $lt-gray 0 2em 0 0,
            inset $bright-purple 0 4em 0 0;
    }
}
